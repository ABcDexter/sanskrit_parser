#!/usr/bin/env python
""" Sanskrit Parser Wrapper Script

    Author: Karthik Madathil <kmadathil@gmail.com>
"""

from argparse import ArgumentParser
import logging
import sys

from sanskrit_parser.base.sanskrit_base import SanskritObject
from sanskrit_parser.parser.sandhi_analyzer import main as sandhi
from sanskrit_parser.parser.vakya_analyzer import main as vakya
import sanskrit_parser.parser.vakya_analyzer
import sanskrit_parser


def tags(argv):
    argv.append("--tags")
    sandhi(argv)

parser = ArgumentParser(description='Sanskrit Parser')

parser.add_argument('command', help='Subcommand to run',
                    choices=["sandhi","vakya","tags"])
parser.add_argument('--dot-file', type=str, default=None,help='Dotfile')
parser.add_argument('--debug', action='store_true')

# parse_args defaults to [1:] for args, but you need to
# exclude the rest of the args too, or validation will fail
args, rest = parser.parse_known_args()

# Logging
sanskrit_parser.console.setLevel(logging.INFO)
if args.debug:
    sanskrit_parser.fh.setLevel(logging.DEBUG)
else:
    sanskrit_parser.fh.setLevel(logging.INFO)

if not hasattr(args, 'command'):
    print('Unrecognized command')
    parser.print_help()
    exit(1)
# use dispatch pattern to invoke method with same name
graph = eval(getattr(args, 'command')+"(rest)")
# Write dot file
if graph is not None and args.dot_file is not None:
    graph.write_dot(args.dot_file)
