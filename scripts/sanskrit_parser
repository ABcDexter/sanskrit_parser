#!/usr/bin/env python
""" Sanskrit Parser Wrapper Script

    Author: Karthik Madathil <kmadathil@gmail.com>
"""

from argparse import ArgumentParser
import logging
import sys

from sanskrit_parser.base.sanskrit_base import SanskritObject
from sanskrit_parser.parser.sandhi_analyzer import main as sandhi
from sanskrit_parser.parser.vakya_analyzer import main as vakya
import sanskrit_parser.parser.vakya_analyzer

logger = logging.getLogger(__name__)

def _console_logging():
    console = logging.StreamHandler()
    console.setLevel(logging.INFO)
    # set a format which is simpler for console use
    formatter = logging.Formatter('%(levelname)-8s %(message)s')
    # tell the handler to use this format
    console.setFormatter(formatter)
    # add the handler to the root logger
    logger.addHandler(console)

_console_logging()

def tags(argv):
    argv.append("--tags")
    sandhi(argv)

parser = ArgumentParser(description='Sanskrit Parser')

parser.add_argument('command', help='Subcommand to run',
                    choices=["sandhi","vakya","tags"])
# parse_args defaults to [1:] for args, but you need to
# exclude the rest of the args too, or validation will fail
args = parser.parse_args(sys.argv[1:2])
if not hasattr(args, 'command'):
    print('Unrecognized command')
    parser.print_help()
    exit(1)
# use dispatch pattern to invoke method with same name
eval(getattr(args, 'command')+"(sys.argv[2:])")

